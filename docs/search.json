[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Russell Lenth. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lenth R (2024). estimability: Tools Assessing Estimability Linear Predictions. R package version 1.5.","code":"@Manual{,   title = {estimability: Tools for Assessing Estimability of Linear Predictions},   author = {Russell Lenth},   year = {2024},   note = {R package version 1.5}, }"},{"path":[]},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Tools for Assessing Estimability of Linear Predictions","text":"nonest.basis() function provided determines basis null space matrix. may used conjunction .estble() determine estimability (within tolerance) given linear function regression coefficients linear model. set epredict() methods provided lm, glm, mlm objects. work just like predict(), except NA returned cases estimable. useful alternative generic warning “predictions rank-deficient models unreliable.” function estble.subspace() projects set linear functions onto estimable subspace (possibly smaller dimension). can useful creating set estimable contrasts joint testing. Package developers may wish import package incorporate estimability checks predict methods.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Assessing Estimability of Linear Predictions","text":"install latest version CRAN, run Release notes latest CRAN version found https://cran.r-project.org/package=estimability/NEWS – news(package = \"estimability\") notes version installed. install latest development version Github, newest devtools package installed, run latest release notes development version, see NEWS file","code":"install.packages(\"estimability\") devtools::install_github(\"rvlenth/estimability\", dependencies = TRUE)"},{"path":"/reference/epredict.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimability Enhancements for lm and Relatives — epredict","title":"Estimability Enhancements for lm and Relatives — epredict","text":"functions call corresponding S3 predict methods stats package, check estimability new predictions, appropriate actions non-estimable cases.","code":""},{"path":"/reference/epredict.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimability Enhancements for lm and Relatives — epredict","text":"","code":"# S3 method for lm epredict(object, newdata, ...,      type = c(\"response\", \"terms\", \"matrix\", \"estimability\"),      nonest.tol = 1e-8, nbasis = object$nonest) # S3 method for glm epredict(object, newdata, ...,      type = c(\"link\", \"response\", \"terms\", \"matrix\", \"estimability\"),      nonest.tol = 1e-8, nbasis = object$nonest) # S3 method for mlm epredict(object, newdata, ...,      type = c(\"response\", \"matrix\", \"estimability\"),      nonest.tol = 1e-8, nbasis = object$nonest)      eupdate(object, ...)"},{"path":"/reference/epredict.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimability Enhancements for lm and Relatives — epredict","text":"object object inheriting lm newdata data.frame containing predictor combinations new predictions ... Arguments passed predict update nonest.tol Tolerance used .estble check estimability new predictions type Character string specifying desired result. See Details. nbasis Basis null space, e.g., result call nonest.basis. nbasis NULL, basis constructed object.","code":""},{"path":"/reference/epredict.lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimability Enhancements for lm and Relatives — epredict","text":"newdata missing object rank-deficient, method passes arguments directly method stats library. rank-deficient cases newdata provided, row newdata tested estimability null basis provided nbasis. non-estimable cases found replaced NAs. type argument passed predict one \"response\", \"link\", \"terms\". newdata present type = \"matrix\", model matrix newdata returned, attribute \"estble\" logical vector length nrow(newdata) indicating whether row estimable. type = \"estimability\", just logical vector returned. anticipate making several epredict calls new data, improves efficiency either obtain null basis provide call, add object name \"nonest\" (perhaps via call eupdate). eupdate S3 generic function method provided \"lm\" objects. updates object according arguments ..., obtains updated object's nonestimable basis returns object$nonest.","code":""},{"path":"/reference/epredict.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimability Enhancements for lm and Relatives — epredict","text":"result call predict method stats package, except rows elements corresponding non-estimable predictor combinations set NA. value type  \"matrix\" \"estimability\" explained details.","code":""},{"path":"/reference/epredict.lm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimability Enhancements for lm and Relatives — epredict","text":"Russell V. Lenth <russell-lenth@uiowa.edu>","code":""},{"path":"/reference/epredict.lm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimability Enhancements for lm and Relatives — epredict","text":"capabilities epredict function lm objects provided  R 4.3.0 later predict.lm rankdeficient = \"NA\"; however, epredict  uses estimability's criteria determine predictions set NA. advantage using epredict one efficiency: can compute null basis available additional predictions, whereas predict.lm re-compute time. user wishes see message explaining NAs displayed, set options(estimability.verbose = TRUE).","code":""},{"path":[]},{"path":"/reference/epredict.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimability Enhancements for lm and Relatives — epredict","text":"","code":"require(\"estimability\")  # Fake data where x3 and x4 depend on x1, x2, and intercept x1 <- -4:4 x2 <- c(-2,1,-1,2,0,2,-1,1,-2) x3 <- 3*x1 - 2*x2 x4 <- x2 - x1 + 4 y <- 1 + x1 + x2 + x3 + x4 + c(-.5,.5,.5,-.5,0,.5,-.5,-.5,.5)  # Different orderings of predictors produce different solutions mod1234 <- lm(y ~ x1 + x2 + x3 + x4) mod4321 <- eupdate(lm(y ~ x4 + x3 + x2 + x1)) # (Estimability checking with mod4321 will be more efficient because #  it will not need to recreate the basis) mod4321$nonest #>             [,1]        [,2] #> [1,] -0.17177076  0.94865978 #> [2,]  0.04294269 -0.23716495 #> [3,] -0.24764833 -0.13231961 #> [4,] -0.53823935 -0.02747428 #> [5,]  0.78588768  0.15979389    # test data: testset <- data.frame(                x1 = c(3,  6,  6,  0,  0,  1),                x2 = c(1,  2,  2,  0,  0,  2),                x3 = c(7, 14, 14,  0,  0,  3),                x4 = c(2,  4,  0,  4,  0,  4))  # Look at predictions when we don't check estimability suppressWarnings( # Disable the warning from stats::predict.lm     rbind(p1234 = predict(mod1234, newdata = testset),           p4321 = predict(mod4321, newdata = testset))) #>        1  2  3 4   5  6 #> p1234 14 23 23 5   5  8 #> p4321 14 47 23 5 -19 14  # Compare with results when we do check: rbind(p1234 = epredict(mod1234, newdata = testset),       p4321 = epredict(mod4321, newdata = testset)) #>        1  2  3 4  5  6 #> p1234 14 NA 23 5 NA NA #> p4321 14 NA 23 5 NA NA  # now stats::predict has same capability for lm objects stats::predict(mod1234, newdata = testset, rankdeficient = \"NA\") #>  1  2  3  4  5  6  #> 14 NA 23  5 NA NA   # Note that estimable cases have the same predictions  # change mod1234 and include nonest basis  mod134 <- eupdate(mod1234, . ~ . - x2, subset = -c(3, 7)) mod134$nonest #>            [,1] #> [1,]  0.9561829 #> [2,]  0.1195229 #> [3,] -0.1195229 #> [4,] -0.2390457  # When row spaces are the same, bases are interchangeable # so long as you account for the ordering of parameters: epredict(mod4321, newdata = testset, type = \"estimability\",     nbasis = nonest.basis(mod1234)[c(1,5:2), ]) #>     1     2     3     4     5     6  #>  TRUE FALSE  TRUE  TRUE FALSE FALSE       # Comparison with predict.lm stats::predict(mod4321, newdata = testset, rankdeficient = \"NA\") #>  1  2  3  4  5  6  #> 14 NA 23  5 NA NA   if (FALSE) { ### Additional illustration example(nonest.basis)  ## creates model objects warp.lm1 and warp.lm2  # The two models have different contrast specs. But the empty cell # is correctly identified in both: fac.cmb <- expand.grid(wool = c(\"A\", \"B\"), tension = c(\"L\", \"M\", \"H\")) cbind(fac.cmb,        pred1 = epredict(warp.lm1, newdata = fac.cmb),        pred2 = epredict(warp.lm2, newdata = fac.cmb)) }"},{"path":"/reference/estble-subspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an estimable subspace — estble.subspace","title":"Find an estimable subspace — estble.subspace","text":"Determine transformation B rows matrix L   B %*% L estimable.   practical example jointly testing set contrasts L   linear model, need restrict subspace spanned   rows L estimable.","code":""},{"path":"/reference/estble-subspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an estimable subspace — estble.subspace","text":"","code":"estble.subspace (L, nbasis, tol = 1e-8)"},{"path":"/reference/estble-subspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an estimable subspace — estble.subspace","text":"L matrix dimensions k p nbasis k b matrix whose columns form     basis non-estimable linear functions -- returned      nonest.basis tol Numeric tolerance assessing nonestimability. See     .estble.","code":""},{"path":"/reference/estble-subspace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find an estimable subspace — estble.subspace","text":"require B rows M = B %*% L   estimable, .e. orthogonal columns nbasis.   Thus, need B %*% L %*% nbasis zero, equivalently,   t(B) must null space t(L %*% nbasis).   can found using nonest.basis.","code":""},{"path":"/reference/estble-subspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an estimable subspace — estble.subspace","text":"r p matrix M = B %*% L whose rows orthogonal columns  nbasis. matrix B attached attr(M, \"B\").   Note rows L non-estimable, r less k. fact, estimable functions    row space L, r = 0.","code":""},{"path":"/reference/estble-subspace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find an estimable subspace — estble.subspace","text":"Russell V. Lenth <russell-lenth@uiowa.edu>","code":""},{"path":"/reference/estble-subspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find an estimable subspace — estble.subspace","text":"","code":"### Find a set of estimable interaction contrasts for a 3 x 4 design  ### with two empty cells. des <- expand.grid(A = factor(1:3), B = factor(1:4)) des <- des[-c(5, 12), ]  # cells (2,2) and (3,4) are empty  X <- model.matrix(~ A * B, data = des) N <- nonest.basis(X)  L <- cbind(matrix(0, nrow = 6, ncol = 6), diag(6)) # i.e., give nonzero weight only to interaction effects  estble.subspace(L, N) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] #> [1,]    0    0    0    0    0    0    0    0    1     0     0     0 #> [2,]    0    0    0    0    0    0    0    0    0     1     0     0 #> [3,]    0    0    0    0    0    0    0    0    0     0     1     0 #> [4,]    0    0    0    0    0    0    0   -1    0     0     0     0 #> attr(,\"B\") #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]    0    0    1    0    0    0 #> [2,]    0    0    0    1    0    0 #> [3,]    0    0    0    0    1    0 #> [4,]    0   -1    0    0    0    0  # Tougher demo: create a variation where all rows of L are non-estimable LL <- matrix(rnorm(36), ncol = 6) %*% L estble.subspace(LL, N) #>      [,1] [,2] [,3] [,4] [,5] [,6]          [,7]        [,8]       [,9] #> [1,]    0    0    0    0    0    0  2.775558e-16  0.94444860 -2.2476951 #> [2,]    0    0    0    0    0    0  2.081668e-17  0.79383782  0.2564956 #> [3,]    0    0    0    0    0    0 -2.498002e-16 -0.74158401  0.4100229 #> [4,]    0    0    0    0    0    0  0.000000e+00  0.05621727  1.2228212 #>           [,10]      [,11]         [,12] #> [1,] -0.3746606 -2.2247074 -5.551115e-17 #> [2,]  0.8589392 -0.5328160  3.742666e-16 #> [3,] -1.0361710 -0.5532579  9.454243e-17 #> [4,]  1.1290187 -0.8990313  1.804112e-16 #> attr(,\"B\") #>            [,1]       [,2]       [,3]       [,4]        [,5]        [,6] #> [1,] -0.6542234  0.3710275 0.54920429  0.2615446  0.14314236  0.20930771 #> [2,] -0.3512571 -0.8812953 0.07252168  0.2916776 -0.09453098 -0.02580085 #> [3,]  0.1293034 -0.1892932 0.12285602 -0.1427821  0.95331535 -0.05619815 #> [4,]  0.3123951 -0.1644018 0.21154095 -0.1148613 -0.06632638  0.90168701"},{"path":"/reference/estimability-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimability Tools for Linear Models — estimability-package","title":"Estimability Tools for Linear Models — estimability-package","text":"Provides tools determining estimability linear functions regression coefficients,  alternative epredict methods lm, glm, mlm objects handle non-estimable cases correctly.","code":""},{"path":"/reference/estimability-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimability Tools for Linear Models — estimability-package","text":"linear model full rank, regression coefficients  uniquely estimable. However, predicted values unique, linear  combinations coefficients lie row space data matrix. Thus,  estimability linear function regression coefficients can determined  testing whether coefficients lie row space -- equivalently,  orthogonal corresponding null space. package provides functions nonest.basis  .estble facilitate estimability test.  Package developers may find useful incorporating  predict methods new predictor settings involved. function estble.subspace useful projecting matrix onto estimable subspace whose rows estimable. package also provides epredict methods --  alternatives predict methods stats  package \"lm\", \"glm\", \"mlm\" objects.  newdata argument specified, estimability  new prediction checked non-estimable cases replaced NA.","code":""},{"path":"/reference/estimability-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimability Tools for Linear Models — estimability-package","text":"Russell V. Lenth <russell-lenth@uiowa.edu>","code":""},{"path":"/reference/estimability-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimability Tools for Linear Models — estimability-package","text":"Monahan, John F. (2008) Primer Linear Models, CRC Press. (Chapter 3)","code":""},{"path":"/reference/nonest.basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimability Tools — nonest.basis","title":"Estimability Tools — nonest.basis","text":"documents functions needed test estimability linear functions regression coefficients.","code":""},{"path":"/reference/nonest.basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimability Tools — nonest.basis","text":"","code":"nonest.basis(x, ...) # S3 method for default nonest.basis(x, ...) # S3 method for qr nonest.basis(x, ...) # S3 method for matrix nonest.basis(x, ...) # S3 method for lm nonest.basis(x, ...) # S3 method for svd nonest.basis(x, tol = 5e-8, ...)  legacy.nonest.basis(x, ...)  all.estble  is.estble(x, nbasis, tol = 1e-8)"},{"path":"/reference/nonest.basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimability Tools — nonest.basis","text":"x nonest.basis, object class methods(\"nonest.basis\"). , .estble, numeric vector matrix assessing estimability sum(x * beta), beta vector regression coefficients. nbasis Matrix whose columns span null space model matrix. matrix returned nonest.basis. tol Numeric tolerance assessing rank nonestimability.    determining rank, singular values less tol times largest singular value regarded zero. determining estimability nonzero \\(x\\), \\(\\beta'x\\) assessed whether \\(||N'x||^2 < \\tau ||x'x||^2\\), \\(N\\) \\(\\tau\\) denote nbasis tol, respectively. ... Additional arguments passed methods.","code":""},{"path":"/reference/nonest.basis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimability Tools — nonest.basis","text":"Consider linear model \\(y = X\\beta + E\\). \\(X\\) full rank, possible estimate \\(\\beta\\) uniquely. However, \\(X\\beta\\) uniquely estimable, \\('X\\beta\\) conformable vector \\(\\). Since \\('X\\) comprises linear combination rows \\(X\\), follows can estimate linear function coefficients lie row space \\(X\\). Equivalently, can check ensure coefficients orthogonal null space \\(X\\). nonest.basis method class 'svd' really functional method \"svd\" class (least R <= 4.2.0). function nonest.basis.svd exported may called directly; works results svd La.svd. require x$v complete matrix right singular values; need x$u . default method serve svd method, works x required elements SVD result, case passes nonest.basis.svd. matrix method runs nonest.basis.svd(svd(x, nu = 0)). lm method runs qr method x$qr. function legacy.nonest.basis original default method early  versions estimability package. may called x  either matrix qr object, obtaining R matrix,  uses additional QR decomposition t(R) obtain needed basis.  (current nonest.basis method qr objects instead based  singular-value decomposition R, requires much simpler code.) constant .estble simply 1 x 1 matrix NA. specifies trivial non-estimability basis, using nbasis cause everything test estimable.","code":""},{"path":"/reference/nonest.basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimability Tools — nonest.basis","text":"\\(X\\) full-rank, methods nonest.basis return basis null space \\(X\\). number rows equal number regression coefficients (including NAs); number columns equal rank deficiency model matrix. columns orthonormal. model full-rank, nonest.basis returns .estble. matrix method uses \\(X\\) , qr method uses \\(QR\\) decomposition \\(X\\), lm method recovers required information object. function .estble returns logical value (vector, x matrix) TRUE function estimable FALSE .","code":""},{"path":"/reference/nonest.basis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimability Tools — nonest.basis","text":"Monahan, John F. (2008) Primer Linear Models, CRC Press. (Chapter 3)","code":""},{"path":"/reference/nonest.basis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimability Tools — nonest.basis","text":"Russell V. Lenth <russell-lenth@uiowa.edu>","code":""},{"path":"/reference/nonest.basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimability Tools — nonest.basis","text":"","code":"require(estimability)  X <- cbind(rep(1,5), 1:5, 5:1, 2:6) ( nb <- nonest.basis(X) ) #>             [,1]       [,2] #> [1,]  0.25533081  0.9492620 #> [2,]  0.71407655 -0.2512536 #> [3,]  0.06553511 -0.1715022 #> [4,] -0.64854145  0.0797514  SVD <- svd(X, nu = 0)    # we don't need the U part of UDV' nonest.basis.svd(SVD)    # same result as above #>             [,1]       [,2] #> [1,]  0.25533081  0.9492620 #> [2,]  0.71407655 -0.2512536 #> [3,]  0.06553511 -0.1715022 #> [4,] -0.64854145  0.0797514  # Test estimability of some linear functions for this X matrix lfs <- rbind(c(1,4,2,5), c(2,3,9,5), c(1,2,2,1), c(0,1,-1,1)) is.estble(lfs, nb) #> [1]  TRUE  TRUE FALSE  TRUE  # Illustration on 'lm' objects: warp.lm1 <- lm(breaks ~ wool * tension, data = warpbreaks,      subset = -(26:38),      contrasts = list(wool = \"contr.treatment\", tension = \"contr.treatment\")) zapsmall(warp.nb1 <- nonest.basis(warp.lm1)) #>            [,1] #> [1,]  0.0000000 #> [2,] -0.5773503 #> [3,]  0.0000000 #> [4,]  0.0000000 #> [5,]  0.5773503 #> [6,]  0.5773503  warp.lm2 <- update(warp.lm1,      contrasts = list(wool = \"contr.sum\", tension = \"contr.helmert\")) zapsmall(warp.nb2 <- nonest.basis(warp.lm2)) #>            [,1] #> [1,] -0.3779645 #> [2,]  0.3779645 #> [3,]  0.5669467 #> [4,]  0.1889822 #> [5,] -0.5669467 #> [6,] -0.1889822  # These bases look different, but they both correctly identify the empty cell wcells = with(warpbreaks, expand.grid(wool = levels(wool), tension = levels(tension))) epredict(warp.lm1, newdata = wcells, nbasis = warp.nb1) #>        1        2        3        4        5        6  #> 44.55556       NA 24.00000 27.28571 25.71429 18.77778  epredict(warp.lm2, newdata = wcells, nbasis = warp.nb2) #>        1        2        3        4        5        6  #> 44.55556       NA 24.00000 27.28571 25.71429 18.77778"}]
